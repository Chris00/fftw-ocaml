
PKG_NAME := @PACKAGE_NAME@
DISTFILES := LICENSE README.md \
	bootstrap configure.ac configure Makefile.in OCamlMakefile \
	src/*.ml src/*.mli src/*.c src/Makefile.in src/META.in \
	examples/*.ml examples/*.txt examples/Makefile.in
VERSION = @PACKAGE_VERSION@
PKG_TARBALL = $(PKG_NAME)-$(VERSION).tar.gz

# Web site locally and on sourceforge:
SRC_WEB		= web
SF_WEB		= /home/groups/o/oc/ocaml-fftw/htdocs

.PHONY: all byte opt native install uninstall examples pnc
all byte opt native install uninstall:
	$(MAKE) -C src $@

examples: all
	$(MAKE) -C examples all

distclean: clean
	$(MAKE) -C examples clean

# Profiling
pnc:
#	$(MAKE) -C src -B pnc
	$(MAKE) -C examples -B pnc


.PHONY: tar dist doc
doc:
	$(MAKE) -C src htdoc
	mkdir -p doc
	$(RM) -r doc/html
	mv src/doc/fftw3/html doc
	$(RM) -r src/doc

tar dist:
	-$(RM) -r $(PKG_NAME)-$(VERSION)
	mkdir $(PKG_NAME)-$(VERSION)
	cp -r --preserve --parents $(DISTFILES) $(PKG_NAME)-$(VERSION)
	tar zcvf $(PKG_TARBALL) $(PKG_NAME)-$(VERSION)
	$(RM) -rf $(PKG_NAME)-$(VERSION)

# Release a Sourceforge tarball and publish the HTML doc 
.PHONY: web upload
web: doc
	@if [ -d doc ] ; then \
	  scp -r doc/ shell.sf.net:$(SF_WEB)/ \
	  && echo "--- Published documentation on SF" ; \
	fi
	@ if [ -d $(SRC_WEB)/ ] ; then \
	  scp $(SRC_WEB)/*.html $(SRC_WEB)/*.jpg LICENSE \
	    shell.sf.net:$(SF_WEB) \
	  && echo "--- Published web site (in $(SRC_WEB)/) on SF" ; \
	fi

upload: dist
	@ if [ -z "$(PKG_TARBALL)" ]; then \
		echo "PKG_TARBALL not defined"; exit 1; fi
	echo -e "bin\ncd incoming\nput $(PKG_TARBALL)" \
	  | ncftp -p chris_77@users.sf.net upload.sourceforge.net \
	  && echo "--- Uploaded $(PKG_TARBALL) to SF"

clean::
	$(RM) *~ config.log config.status $(PKG_TARBALL) 
	$(RM) -r autom4te.cache/ doc/
	$(MAKE) -C src clean
	$(MAKE) -C examples clean
